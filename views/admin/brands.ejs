<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brands</title>
    <link href="https://fonts.googleapis.com/css2?family=Bellefair&family=Outfit:wght@400;500;700&display=swap"
        rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Font Awesome (for modals) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Outfit', sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
            display: flex;
            overflow-x: hidden;
        }

        /* Navbar */
        .navbar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .brand-name {
            font-family: 'Bellefair', serif;
            font-size: 28px;
            font-weight: normal;
            text-decoration: none;
            color: #192430;
        }

        .new-btn-2 {
            background-color: #3e29a8;
            border-radius: 10px;
            width: fit-content;
            color: #e0e0e0;
        }

        .nav-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .nav-right .search-container {
            position: relative;
        }

        .nav-right input {
            padding: 8px 15px 8px 35px;
            border: 1px solid #e0e0e0;
            border-radius: 20px;
            width: 200px;
            font-size: 14px;
            background: #f5f5f5;
        }

        .nav-right .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            font-size: 16px;
        }

        .nav-right .new-btn {
            background: #3b6da1;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .nav-right .new-btn:hover {
            background: #2d5480;
        }

        .nav-right .filter-btn {
            color: #666;
            font-size: 18px;
            cursor: pointer;
        }

        .nav-right a.profile-icon {
            color: #666;
            font-size: 24px;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .nav-right a.profile-icon:hover {
            color: #28517D;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #f9f9f9;
            padding: 20px 0;
            position: fixed;
            top: 60px;
            bottom: 0;
            left: 0;
            z-index: 999;
            overflow-y: auto;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 15px 30px;
            color: #192430;
            text-decoration: none;
            font-size: 16px;
            transition: background 0.3s ease;
            position: relative;
            border-radius: 15px;
            cursor: pointer;
        }

        .sidebar a i {
            margin-right: 15px;
            font-size: 18px;
        }

        .sidebar a.active {
            background: #3b6da1;
            color: white;
        }

        .sidebar a:hover {
            background: #d9dbdd;
        }

        /* Main Content */
        .main-content {
            margin-left: 250px;
            padding: 80px 30px 30px;
            flex: 1;
        }

        .dashboard-title {
            font-size: 24px;
            color: #192430;
            margin-bottom: 20px;
        }

        /* Filters and Search */
        .filter-search-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            gap: 20px;
        }

        .filter-select {
            min-width: 200px;
        }

        .search-container {
            display: flex;
            align-items: center;
            background: #f5f5f5;
            border-radius: 4px;
            overflow: hidden;
            flex: 1;
            max-width: 400px;
        }

        .search-container input {
            padding: 8px 15px;
            border: 1px solid #e0e0e0;
            border-right: none;
            border-radius: 4px 0 0 4px;
            font-size: 14px;
            width: 100%;
            background: #f5f5f5;
        }

        .search-container button {
            background: #3b6da1;
            color: white;
            border: none;
            padding: 8px 15px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .search-container button:hover {
            background: #2d5480;
        }

        .new-btn-2 {
            background-color: #3e29a8;
            border-radius: 4px;
            color: white;
            padding: 8px 15px;
            border: none;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: background-color 0.3s ease;
            white-space: nowrap;
        }

        .new-btn-2:hover {
            background-color: #2d1f7a;
            color: white;
        }

        /* Table */
        .brands-table {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .brands-table table {
            width: 100%;
        }

        .brands-table th {
            background: #3b6da1;
            color: white;
            padding: 12px;
            font-size: 14px;
        }

        .brands-table td {
            padding: 12px;
            font-size: 14px;
            color: #192430;
            vertical-align: middle;
        }

        .brands-table .brand-description {
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .brands-table .actions button {
            color: #4a00e0;
            font-size: 16px;
            background: none;
            border: none;
            cursor: pointer;
        }
        /* Make action cell compact with small gaps */
        .brands-table td.actions {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px; /* little bit gap */
        }
        .brands-table td.actions .btn.btn-sm {
            padding: 4px 8px;
            border-radius: 8px;
            background-color: #f8fafc;
            border: 1px solid #e5e7eb;
            color: #374151;
        }
        .brands-table td.actions .btn.btn-sm:hover {
            background-color: #eef2f7;
        }
        .brands-table td.actions .btn.btn-sm i { font-size: 14px; }
        .brands-table td.actions .btn.text-danger {
            color: #dc2626 !important;
            border-color: #fecaca;
            background-color: #fff1f2;
        }
        .brands-table td.actions .btn.text-danger:hover {
            background-color: #ffe4e6;
        }

        .brands-table .actions button:hover {
            color: #28517D;
        }

        /* Pagination */
        .pagination-custom {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            color: #666;
            font-size: 14px;
        }

        .pagination-custom .page-nav {
            display: flex;
            gap: 10px;
        }

        .pagination-custom .page-nav a {
            color: #666;
            text-decoration: none;
            padding: 5px 10px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
        }

        .pagination-custom .page-nav a.active {
            background: #e0e0e0;
        }

        .pagination-custom .page-nav a:hover {
            background: #f5f5f5;
        }

        /* Responsive */
        @media (max-width: 991.98px) {
            .main-content {
                margin-left: 0;
                padding: 80px 20px 20px;
            }
            .brands-table { overflow-x: auto; }
        }

        @media (max-width: 575.98px) {
            .brands-table { padding: 10px; }
            .brands-table th, .brands-table td { font-size: 12px; padding: 8px; }
        }
        /* Status badges */
        .status-badge {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 999px;
            font-size: 12px;
            font-weight: 600;
        }
        .status-badge.active { background: #e8fff1; color: #16a34a; border: 1px solid #bbf7d0; }
        .status-badge.blocked { background: #fff1f2; color: #ef4444; border: 1px solid #fecaca; }

        /* Image Upload Styles */
        .image-upload-container {
            margin-top: 8px;
        }

        .image-upload-area {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            padding: 2rem;
            text-align: center;
            background-color: #f8f9fa;
            transition: all 0.3s ease;
            position: relative;
            min-height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .image-upload-area:hover {
            border-color: #3b6da1;
            background-color: #e7f3ff;
        }

        .image-upload-area.dragover {
            border-color: #3e29a8;
            background-color: #f0e6ff;
        }

        .image-upload-content {
            width: 100%;
        }

        .image-preview {
            width: 100%;
            text-align: center;
        }

        /* Enhanced Brand Image Styles */
        .brand-image-container {
            display: inline-block;
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .brand-image {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .brand-image:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .brand-image-container.no-image {
            width: 60px;
            height: 60px;
            background: #f8f9fa;
            border: 2px dashed #dee2e6;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
        }

        /* Image Modal Styles */
        .image-modal .modal-dialog {
            max-width: 90vw;
            max-height: 90vh;
        }

        .image-modal .modal-content {
            background: rgba(0, 0, 0, 0.9);
            border: none;
            border-radius: 15px;
        }

        .image-modal .modal-body {
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 70vh;
        }

        .image-modal .modal-body img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            border-radius: 10px;
        }

        .image-modal .btn-close {
            filter: invert(1);
        }
    </style>
</head>

<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="d-flex align-items-center">
            <button class="btn btn-link d-lg-none sidebar-toggle" type="button" data-bs-toggle="offcanvas"
                data-bs-target="#sidebarOffcanvas" aria-controls="sidebarOffcanvas">
                <i class="bi bi-list"></i>
            </button>
            <a href="/admin/brands" class="brand-name">COLINGUEST</a>
        </div>
    </nav>

    <!-- Offcanvas Sidebar (mobile) -->
    <div class="offcanvas offcanvas-start d-lg-none" tabindex="-1" id="sidebarOffcanvas"
        aria-labelledby="sidebarOffcanvasLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="sidebarOffcanvasLabel">Menu</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div class="sidebar">
                <a href="/admin/dashboard"><i class="bi bi-grid"></i> Dashboard</a>
                <a href="/admin/categories"><i class="bi bi-tag"></i> Categories</a>
                <a href="/admin/brands"><i class="bi bi-badge-tm"></i> Brands</a>
                <a href="/admin/products"><i class="bi bi-box"></i> Products</a>
                <a href="/admin/customers"><i class="bi bi-people"></i> Customers</a>
                <a href="/admin/orders"><i class="bi bi-cart"></i> Orders</a>
                <a href="/admin/coupons"><i class="bi bi-ticket"></i> Coupons</a>
                <a href="/admin/sales-report"><i class="bi bi-bar-chart"></i> Sales Report</a>
                <a href="/admin/wallet-management"><i class="bi bi-credit-card"></i>Wallet</a>
                <a href="/admin/logout"><i class="bi bi-box-arrow-right"></i> Sign Out</a>
            </div>
        </div>
    </div>

    <!-- Sidebar (desktop) -->
    <div class="sidebar d-none d-lg-block">
        <a href="/admin/dashboard"><i class="bi bi-grid"></i> Dashboard</a>
        <a href="/admin/categories"><i class="bi bi-tag"></i> Categories</a>
          <a href="/admin/offers"><i class="bi bi-gift"></i> Offers</a>
        <a href="/admin/brands"><i class="bi bi-badge-tm"></i> Brands</a>
      
        <a href="/admin/products"><i class="bi bi-box"></i> Products</a>
          <a href="/admin/addproducts"><i class="bi bi-box"></i> Add Products</a>
        <a href="/admin/customers"><i class="bi bi-people"></i> Customers</a>
        <a href="/admin/orders"><i class="bi bi-cart"></i> Orders</a>
        <a href="/admin/coupons"><i class="bi bi-ticket"></i> Coupons</a>
        <a href="/admin/sales-report"><i class="bi bi-bar-chart"></i> Sales Report</a>
        <a href="/admin/wallet-management"><i class="bi bi-credit-card"></i>Wallet</a>
        <a href="/admin/logout"><i class="bi bi-box-arrow-right"></i> Sign Out</a>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <h2 class="dashboard-title">Brands</h2>

        <!-- Filters and Search -->
        <div class="filter-search-container">
            <div class="filter-select">
                <select class="form-select" id="statusFilter">
                    <option value="">All Brands</option>
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
            <div class="d-flex align-items-center gap-3">
                <div class="search-container">
                    <input id="searchInput" type="text" placeholder="Search brands...">
                    <button id="searchBtn"><i class="bi bi-search"></i></button>
                </div>
                <button class="new-btn-2" data-bs-toggle="modal" data-bs-target="#addBrandModal">
                    <i class="bi bi-plus-lg"></i> Add Brand
                </button>
            </div>
        </div>

        <!-- Add Brand Modal -->
        <div class="modal fade" id="addBrandModal" tabindex="-1" aria-labelledby="addBrandModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                <div class="modal-content shadow-lg border-0 rounded-3">
                    <div class="modal-header text-white" style="background-color: #3e29a8; height: 50px;">
                        <h5 class="modal-title fw-bold" id="addBrandModalLabel">Add Brand</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <form id="addBrandForm">
                            <div class="mb-4">
                                <label for="addBrandName" class="form-label fw-semibold">Brand Name</label>
                                <input type="text" class="form-control rounded-3" id="addBrandName" name="name" placeholder="Enter Brand Name">
                                <div id="addBrandNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                            </div>
                            <div class="mb-4">
                                <label for="addBrandDescription" class="form-label fw-semibold">Description (optional)</label>
                                <textarea class="form-control rounded-3" id="addBrandDescription" name="description" rows="3" placeholder="Enter Description"></textarea>
                            </div>
                            <div class="mb-4">
                                <label for="addBrandImage" class="form-label fw-semibold">Brand Image</label>
                                <div class="image-upload-container">
                                    <div class="image-upload-area" id="addImageUploadArea">
                                        <div class="image-upload-content">
                                            <i class="bi bi-cloud-arrow-up" style="font-size: 2rem; color: #6c757d;"></i>
                                            <p class="mb-2">Drag and drop an image here</p>
                                            <p class="mb-3 text-muted">or</p>
                                            <input type="file" id="addBrandImageFile" class="form-control" accept="image/*" style="display: none;">
                                            <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('addBrandImageFile').click()">
                                                Choose File
                                            </button>
                                        </div>
                                        <div class="image-preview" id="addImagePreview" style="display: none;">
                                            <img id="addPreviewImg" src="" alt="Preview" style="max-width: 100%; max-height: 200px; border-radius: 8px;">
                                            <button type="button" class="btn btn-sm btn-outline-danger mt-2" onclick="clearAddImage()">
                                                <i class="bi bi-x-circle"></i> Remove
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" id="addBrandImage" name="brandImage">
                                <div class="form-text">Supported formats: JPG, PNG, GIF. Max size: 5MB</div>
                            </div>
                            <div class="mb-4">
                                <label for="addBrandStatus" class="form-label fw-semibold">Visibility Status</label>
                                <select class="form-select rounded-3" id="addBrandStatus" name="status">
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary">Add Brand</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Brand Modal -->
        <div class="modal fade" id="editBrandModal" tabindex="-1" aria-labelledby="editBrandModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                <div class="modal-content shadow-lg border-0 rounded-3">
                    <div class="modal-header text-white" style="background-color: #3e29a8; height: 50px;">
                        <h5 class="modal-title fw-bold" id="editBrandModalLabel">Update Brand</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <form id="editBrandForm" class="needs-validation" novalidate>
                            <input type="hidden" id="originalBrandName" name="originalBrandName">
                            <div class="mb-4">
                                <label for="editBrandName" class="form-label fw-semibold">Brand Name</label>
                                <input type="text" class="form-control rounded-3" id="editBrandName" name="editBrandName" placeholder="Enter Brand Name">
                                <div id="editBrandNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                            </div>
                            <div class="mb-4">
                                <label for="editBrandDescription" class="form-label fw-semibold">Description (optional)</label>
                                <textarea class="form-control rounded-3" id="editBrandDescription" name="editBrandDescription" rows="3" placeholder="Enter Description"></textarea>
                            </div>
                            <div class="mb-4">
                                <label for="editBrandImage" class="form-label fw-semibold">Brand Image</label>
                                <div class="image-upload-container">
                                    <div class="image-upload-area" id="editImageUploadArea">
                                        <div class="image-upload-content">
                                            <i class="bi bi-cloud-arrow-up" style="font-size: 2rem; color: #6c757d;"></i>
                                            <p class="mb-2">Drag and drop an image here</p>
                                            <p class="mb-3 text-muted">or</p>
                                            <input type="file" id="editBrandImageFile" class="form-control" accept="image/*" style="display: none;">
                                            <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('editBrandImageFile').click()">
                                                Choose File
                                            </button>
                                        </div>
                                        <div class="image-preview" id="editImagePreview" style="display: none;">
                                            <img id="editPreviewImg" src="" alt="Preview" style="max-width: 100%; max-height: 200px; border-radius: 8px;">
                                            <button type="button" class="btn btn-sm btn-outline-danger mt-2" onclick="clearEditImage()">
                                                <i class="bi bi-x-circle"></i> Remove
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" id="editBrandImage" name="editBrandImage">
                                <div class="form-text">Supported formats: JPG, PNG, GIF. Max size: 5MB</div>
                            </div>
                            <div class="d-flex justify-content-between align-items-end">
                                <div class="w-50 me-2">
                                    <label for="editBrandStatus" class="form-label fw-semibold">Visibility Status</label>
                                    <select class="form-select rounded-3" id="editBrandStatus" name="editBrandStatus">
                                        <option value="Active">Active</option>
                                        <option value="Inactive">Inactive</option>
                                    </select>
                                </div>
                                <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #3e29a8;">
                                    <i class="fa fa-check-circle me-2"></i> Update Brand
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Image Modal -->
        <div class="modal fade image-modal" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background: rgba(0, 0, 0, 0.9); color: white; border: none;">
                        <h5 class="modal-title" id="imageModalLabel">Brand Image</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <img id="modalImage" src="" alt="Brand Image" style="width: 100%; border-radius: 8px;">
                    </div>
                </div>
            </div>
        </div>

        <!-- Brands Table -->
        <div class="brands-table">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="text-start ps-5">Brand Name</th>
                        <th>Image</th>
                        <th>Description</th>
                        <th>Created Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% (brands || []).slice().reverse().forEach((brand)=> { %>
                        <tr>
                            <td><%= brand.name %></td>
                            <td>
                                <% if (brand.image) { %>
                                    <div class="brand-image-container">
                                        <img src="<%= brand.image %>" alt="<%= brand.name %>" class="brand-image" data-bs-toggle="modal" data-bs-target="#imageModal" onclick="showImageModal('<%= brand.image %>', '<%= brand.name %>')">
                                    </div>
                                <% } else { %>
                                    <div class="brand-image-container no-image">
                                        <span class="text-muted">No image</span>
                                    </div>
                                <% } %>
                            </td>
                            <td class="brand-description"><%= brand.description || '-' %></td>
                            <td>
                                <%= brand.createdAt ? new Date(brand.createdAt).toLocaleString("en-IN", { day: "2-digit" , month: "short" , year: "numeric" , timeZone: "Asia/Kolkata" }) : '-' %>
                            </td>
                            <td>
                                <span class="status-badge <%= brand.visibility ? 'active' : 'blocked' %>">
                                    <%= brand.visibility ? 'Active' : 'Blocked' %>
                                </span>
                            </td>
                            <td class="actions">
                                <button class="btn btn-sm edit-brand-btn" data-bs-toggle="modal" data-bs-target="#editBrandModal"
                                    data-name="<%= brand.name %>" data-desc="<%= brand.description || '' %>" data-visible="<%= brand.visibility %>" data-image="<%= brand.image || '' %>">
                                    <i class="fa-solid fa-pen-to-square"></i>
                                </button>
                                <label class="toggle-switch ms-2" title="<%= brand.visibility ? 'Click to block' : 'Click to unblock' %>">
                                    <input type="checkbox" class="brand-toggle" data-name="<%= brand.name %>" <%= brand.visibility ? 'checked' : '' %> />
                                    <span class="toggle-slider"></span>
                                </label>
                                <button class="btn btn-sm text-danger delete-brand-btn" data-name="<%= brand.name %>">
                                    <i class="fa-solid fa-trash-can" title="Delete"></i>
                                </button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination-custom">
            <div class="page-nav">
                <% if ((currentPage || 1) > 1) { %>
                    <a href="?page=<%= (currentPage || 1) - 1 %>">«</a>
                <% } %>
                <% for(let i=1; i <= (totalPages || 1); i++) { %>
                    <a href="?page=<%= i %>" class="<%= (currentPage || 1) === i ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if ((currentPage || 1) < (totalPages || 1)) { %>
                    <a href="?page=<%= (currentPage || 1) + 1 %>">»</a>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <!-- SweetAlert (for notifications) -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function openEditModal(name, description, visibility, image) {
            document.getElementById("originalBrandName").value = name;
            document.getElementById("editBrandName").value = name;
            document.getElementById("editBrandDescription").value = description || '';
            document.getElementById("editBrandImage").value = image || '';

            // Show existing image if present
            if (image) {
                document.getElementById("editImagePreview").style.display = "block";
                document.getElementById("editPreviewImg").src = image;
                document.getElementById("editImageUploadArea").style.display = "none";
            } else {
                document.getElementById("editImagePreview").style.display = "none";
                document.getElementById("editImageUploadArea").style.display = "flex";
            }

            document.getElementById("editBrandStatus").value = (String(visibility) === "true") ? "Active" : "Inactive";
        }

        // Image handling functions
        function validateImageFile(file) {
            const maxSize = 5 * 1024 * 1024; // 5MB
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];

            if (!allowedTypes.includes(file.type)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid file type',
                    text: 'Please select a valid image file (JPG, PNG, GIF)'
                });
                return false;
            }

            if (file.size > maxSize) {
                Swal.fire({
                    icon: 'error',
                    title: 'File too large',
                    text: 'Please select an image smaller than 5MB'
                });
                return false;
            }

            return true;
        }

        function convertToBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result);
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }

        function setupImageUpload(uploadAreaId, fileInputId, previewId, previewImgId, hiddenInputId) {
            const uploadArea = document.getElementById(uploadAreaId);
            const fileInput = document.getElementById(fileInputId);
            const preview = document.getElementById(previewId);
            const previewImg = document.getElementById(previewImgId);
            const hiddenInput = document.getElementById(hiddenInputId);

            // Drag and drop events
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                uploadArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight(e) {
                uploadArea.classList.add('dragover');
            }

            function unhighlight(e) {
                uploadArea.classList.remove('dragover');
            }

            uploadArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;

                if (files.length > 0) {
                    handleFile(files[0]);
                }
            }

            fileInput.addEventListener('change', function(e) {
                if (e.target.files.length > 0) {
                    handleFile(e.target.files[0]);
                }
            });

            async function handleFile(file) {
                if (!validateImageFile(file)) return;

                try {
                    const base64 = await convertToBase64(file);

                    // Show preview
                    preview.style.display = 'block';
                    previewImg.src = base64;
                    uploadArea.style.display = 'none';

                    // Store base64 in hidden input
                    hiddenInput.value = base64;

                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error processing image',
                        text: 'Please try again'
                    });
                }
            }

            // Remove image function (for this specific upload area)
            window['clear' + uploadAreaId.charAt(0).toUpperCase() + uploadAreaId.slice(1).replace('Area', '') + 'Image'] = function() {
                preview.style.display = 'none';
                uploadArea.style.display = 'flex';
                fileInput.value = '';
                hiddenInput.value = '';
            };
        }

        function clearAddImage() {
            document.getElementById('addImagePreview').style.display = 'none';
            document.getElementById('addImageUploadArea').style.display = 'flex';
            document.getElementById('addBrandImageFile').value = '';
            document.getElementById('addBrandImage').value = '';
        }

        function clearEditImage() {
            document.getElementById('editImagePreview').style.display = 'none';
            document.getElementById('editImageUploadArea').style.display = 'flex';
            document.getElementById('editBrandImageFile').value = '';
            document.getElementById('editBrandImage').value = '';
        }

        // Show image in modal
        function showImageModal(imageSrc, brandName) {
            document.getElementById('modalImage').src = imageSrc;
            document.getElementById('imageModalLabel').textContent = brandName + ' - Brand Image';
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Sidebar active state
            const sidebarLinks = document.querySelectorAll('.sidebar a');
            const currentPath = window.location.pathname;
            sidebarLinks.forEach(link => {
                if (link.getAttribute('href') === currentPath) {
                    link.classList.add('active');
                }
            });

            // Initialize image upload functionality
            setupImageUpload('addImageUploadArea', 'addBrandImageFile', 'addImagePreview', 'addPreviewImg', 'addBrandImage');
            setupImageUpload('editImageUploadArea', 'editBrandImageFile', 'editImagePreview', 'editPreviewImg', 'editBrandImage');

            // Open Edit Brand modal via data-* attributes
            document.addEventListener('click', (e) => {
                const btn = e.target.closest('.edit-brand-btn');
                if (!btn) return;
                const name = btn.getAttribute('data-name') || '';
                const desc = btn.getAttribute('data-desc') || '';
                const visibleAttr = btn.getAttribute('data-visible');
                const visible = String(visibleAttr) === 'true';
                const image = btn.getAttribute('data-image') || '';
                openEditModal(name, desc, visible, image);
            });

            // Add Brand
            document.getElementById("addBrandForm").addEventListener("submit", async function (e) {
                e.preventDefault();
                const name = document.getElementById("addBrandName").value.trim();
                const description = document.getElementById("addBrandDescription").value.trim();
                const brandImage = document.getElementById("addBrandImage").value.trim();
                const status = document.getElementById("addBrandStatus").value;
                const errors = { name: document.getElementById("addBrandNameError") };
                errors.name.innerText = "";

                if (!name) {
                    errors.name.innerText = "Name is required.";
                    return;
                }

                try {
                    const res = await fetch("/admin/brands", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ name, description, brandImage, status })
                    });
                    if (res.ok) {
                        Swal.fire({ icon: 'success', title: 'Brand added', timer: 1200, showConfirmButton: false });
                        setTimeout(()=> location.reload(), 1200);
                    } else {
                        const data = await res.json().catch(()=>({message:'Failed'}));
                        Swal.fire({ icon: 'error', title: data.message || 'Failed to add brand' });
                    }
                } catch (err) {
                    Swal.fire({ icon: 'error', title: 'Network error' });
                }
            });

            // Edit Brand
            document.getElementById("editBrandForm").addEventListener("submit", async function (e) {
                e.preventDefault();
                const orgName = document.getElementById("originalBrandName").value.trim();
                const editBrandName = document.getElementById("editBrandName").value.trim();
                const editBrandDescription = document.getElementById("editBrandDescription").value.trim();
                const editBrandImage = document.getElementById("editBrandImage").value.trim();
                const editBrandStatus = document.getElementById("editBrandStatus").value;
                const errors = { name: document.getElementById("editBrandNameError") };
                errors.name.innerText = "";

                if (!editBrandName) {
                    errors.name.innerText = "Name is required.";
                    return;
                }

                try {
                    const res = await fetch("/admin/brands", {
                        method: "PUT",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ orgName, editBrandName, editBrandDescription, editBrandImage, editBrandStatus })
                    });
                    if (res.ok) {
                        Swal.fire({ icon: 'success', title: 'Brand updated', timer: 1200, showConfirmButton: false });
                        setTimeout(()=> location.reload(), 1200);
                    } else {
                        const data = await res.json().catch(()=>({message:'Failed'}));
                        Swal.fire({ icon: 'error', title: data.message || 'Failed to update brand' });
                    }
                } catch (err) {
                    Swal.fire({ icon: 'error', title: 'Network error' });
                }
            });

            // Toggle Visibility using switch (Block/Unblock)
            document.addEventListener('change', async (e) => {
                const input = e.target.closest('.brand-toggle');
                if (!input) return;
                const name = input.getAttribute('data-name');
                const wantVisible = input.checked; // checked means Active

                const action = wantVisible ? 'unblock' : 'block';
                const confirmText = wantVisible ? 'unblock this brand?' : 'block this brand? Products under this brand may be hidden.';

                const resSwal = await Swal.fire({
                    icon: 'question',
                    title: `Confirm ${action}`,
                    text: `Are you sure you want to ${confirmText}`,
                    showCancelButton: true,
                    confirmButtonText: 'Yes'
                });
                if (!resSwal.isConfirmed) {
                    // Revert switch state
                    input.checked = !wantVisible;
                    return;
                }

                try {
                    const res = await fetch(`/admin/brands/${action}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ name })
                    });
                    if (res.ok) {
                        Swal.fire({ icon: 'success', title: `Brand ${action}ed`, timer: 900, showConfirmButton: false });
                        setTimeout(() => location.reload(), 900);
                    } else {
                        const data = await res.json().catch(()=>({message:'Failed'}));
                        Swal.fire({ icon: 'error', title: data.message || `Failed to ${action} brand` });
                        // Revert on error
                        input.checked = !wantVisible;
                    }
                } catch (err) {
                    Swal.fire({ icon: 'error', title: 'Network error' });
                    input.checked = !wantVisible;
                }
            });

            // Delete Brand
            document.addEventListener('click', async (e) => {
                const btn = e.target.closest('.delete-brand-btn');
                if (!btn) return;
                const name = btn.getAttribute('data-name');

                const resSwal = await Swal.fire({
                    icon: 'warning',
                    title: 'Delete brand?',
                    text: 'This action cannot be undone.',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'Delete'
                });
                if (!resSwal.isConfirmed) return;

                try {
                    const res = await fetch(`/admin/brands?name=${encodeURIComponent(name)}`, {
                        method: 'DELETE'
                    });
                    if (res.ok) {
                        Swal.fire({ icon: 'success', title: 'Brand deleted', timer: 1200, showConfirmButton: false });
                        setTimeout(() => location.reload(), 1200);
                    } else {
                        const data = await res.json().catch(()=>({message:'Failed'}));
                        Swal.fire({ icon: 'error', title: data.message || 'Failed to delete brand' });
                    }
                } catch (err) {
                    Swal.fire({ icon: 'error', title: 'Network error' });
                }
            });
        });
    </script>
</body>

</html>
